{
  "name": "chrome-socket",
  "version": "0.0.1",
  "description": "streaming socket interface for chrome tcp",
  "main": "socket.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shtylman/chrome-socket.git"
  },
  "keywords": [
    "chrome",
    "socket",
    "tcp"
  ],
  "author": {
    "name": "Roman Shtylman",
    "email": "shtylman@gmail.com"
  },
  "license": "MIT",
  "readme": "# chrome-socket\n\nchrome tcp socket interface with streaming powers\n\n## use\n\n```javascript\nvar Socket = require('chrome-socket');\n\n// create a new tcp socket (not connected or listening yet)\n// socket is a stream and an event emitter\nvar socket = new Socket();\n\nsocket.connect(host, port);\n\n// socket has connected\nsocket.once('connect', function() {\n});\n\nsocket.on('data', function(chunk) {\n    // chunck is an ArrayBuffer of data received from the socket\n});\n\nsocket.on('error', function(err) {\n    // uh oh!\n});\n```\n\n## API\n\nThe API is modeled after node.js sockets. However, it emits and deals with `ArrayBuffer` objects versus node `Buffers` and provides no encoding. Encoding is provided by piping the socket to other streams.\n\n### methods\n\n#### connect\n\n#### write\n\n#### end\n\n### events\n\n#### connect\n\n#### data\n\n#### error\n\n## install\n\nUse [npm](https://npmjs.org) to install.\n\n```\nnpm install chrome-socket\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/shtylman/chrome-socket/issues"
  },
  "homepage": "https://github.com/shtylman/chrome-socket",
  "_id": "chrome-socket@0.0.1",
  "dist": {
    "shasum": "6a2d86eebea78af4ae9a541f7b6b727f5cc96501"
  },
  "_from": "chrome-socket@",
  "_resolved": "https://registry.npmjs.org/chrome-socket/-/chrome-socket-0.0.1.tgz"
}
