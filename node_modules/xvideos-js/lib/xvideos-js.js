//load modules
var http = require('http');
var $ = require('jQuery');
// module vars
var current_search_page=1;
var current_start_index = 1;
var videos_responses = new Array();
var valid_vids = 0;
var xv = {};


// search videos
xv.searchVideos = function (query, page, duration, order, cb){
    videos_responses = new Array();
    var req=http.get('http://www.xvideos.com/?k='+query+'&p='+page+'&sort=relevance&durf=allduration&datef=all');
    req.on('response',function(response) { 
        var data = new Array(); 
        response.on("data", function(chunk) {
            data.push(chunk)
        });
        response.on('end',function(){
            var datas = data.join('');
            var videos = {};
            var totalItems = $('.blackTitle',datas).text().split('-')[1].replace('results','').trim();
            var list=$('.thumbBlock',datas);
            videos.totalItems = parseInt(totalItems);
            videos.total = list.length;
            videos.cb = cb;
            videos.items = [];
            var i= 0;
            $.each(list,function() {
                var infos = {};
                var vlink =$(this).find('a').attr('href');
                infos.id = $(this).attr('id').replace('_','');
                infos.link = 'http://www.xvideos.com'+vlink;
                infos.thumb = $(this).find('img').attr('src');
                infos.seconds = parseInt($(this).find('span.duration').text().replace(/[\(\)\min]/g,'').trim()) * 60;
                infos.title = $(this).find('a').text();
                infos.views = 'unknwown';
                infos.author = 'unknown';
                getVideoInfos(videos,infos,i);
                i+=1;
            });
        });
    });
    req.on('error', function(e) {
        console.log("Got error: " + e.message);
    });
    req.end();
}

function getVideoInfos(videos,infos,num) {
    var req=http.get(infos.link);
    var data = new Array(); 
    req.on('response',function(response) { 
        response.on("data", function(chunk) {
            data.push(chunk);
        });
        response.on('end',function(){
            var datas = data.join('');
            var vars=decodeURIComponent($('embed',datas)[0].attributes[7].nodeValue);
            var link = vars.match(/flv_url=(.*)/)[1];
            infos.resolutions=[];
            infos.resolutions['480p'] = {};
            infos.resolutions['480p']['link'] = link;
            infos.resolutions['480p']['container'] = 'flv';
            storeVideosInfos(videos,infos,num);
        });
    });
    req.on('error', function(e) {
        console.log("Got error: " + e.message);
    });
    req.end();
}

// search in categories
xv.categories = function (query, page, filters,category, cb){
    videos_responses = new Array();
    if (page === 1){
        current_start_index = 1;
    } else {
        current_start_index = page * 25 + 1;    
    }
    var params = {};
    if (query === ''){
        var orderby = 'published';
    } else {
        var orderby = 'relevance';
    }
    if (filters === '') {
        params = {
                    'q' : ''+query+'',
                    'start-index' : ''+current_start_index+'',
                    'max-results':  25,
                    'orderby':        ''+orderby+'',
                    'category': ''+category+''
                }
    } else if (filters === 'hd') {
        params = {
                    'q' : ''+query+'',
                    'start-index' : ''+current_start_index+'',
                    'max-results':  25,
                    'orderby':        ''+orderby+'',
                    'category': ''+category+'',
                    'hd' : true
                }
    } else if (filters === '3d') {
        params = {
                    'q' : ''+query+'',
                    'start-index' : ''+current_start_index+'',
                    'max-results':  25,
                    'orderby':        'relevance',
                    'category': ''+orderby+'',
                    '3d' : true
                }
    }
    try{
        youtube.feeds.category(category,params,
            function( err, data ) {
            if( err ) {
                cb(err);
            } else  {
                cb(data);
            }
        });
    }catch(err){
        console.log('searchVideos err: '+err);
    }
}

xv.getVideoInfos = function (video_link,num,total, cb){
	if (total === 1) {
	    videos_responses = new Array();
	}
    var video = {};
    video.num = num;
    video.total = total;
    video.link = video_link;
    video.cb = cb;
    try {
        ytdl.getInfo(video.link, video, function(err, video, info){
            if(err) {
                console.log(err);
            } else {
                video.id = info.video_id;
                video.title = info.title;
                video.views = info.view_count;
                video.thumb =  info.thumbnail_url;
                video.author = info.author;
                video.duration = info.length_seconds;
                if (info.use_cipher_signature === true){
                    try{
                        var request_options = 
                        {
                            host: 'm.youtube.com',
                            headers: {'user-agent': 'Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8G4 Safari/6533.18.5'},
                            path: '/watch?ajax=1&layout=mobile&tsp=1&utcoffset=120&v='+video.id
                        }
                        var req = http.request(request_options);
                        req.on('response',function(response) { 
                            var data = new Array(); 
                            var resolutions = {};
                            response.on("data", function(chunk) {
                                data.push(chunk);
                            });
                            response.on('end',function(){
                                var d = data.join('');
                                var datas = JSON.parse(d.replace(/\)\]\}\'/,''));
                                resolutions['480p'] = new Array();
                                try {
                                    resolutions['480p']['link'] = datas.content.video.fmt_stream_map[0].url;
                                } catch(err) {
                                    return;
                                }
                                resolutions['480p']['container'] = 'mp4';
                                video.resolutions = resolutions;
                                storeVideosInfos(video);
                            });
                        });
                        req.on('error', function(e) {
                            console.log("Got error: " + e.message);
                        });
                        req.end();
                    } catch(err){
                        console.log('youtube searchVideos err: '+err);
                    }
                } else {
                    var num=info.formats.length;
                    if ( parseInt(num) === 0) {
                            return;
                    }
                    var resolutions = {};
                    var res = [];
                    for(var i=0; i<num; i++) {
                        var resolution = info.formats[i].resolution;
                        var container = info.formats[i].container;
                        if ( in_array(resolution,res) === true || container == 'flv' || container == '3gp' ) {
                            continue;
                        }
                        res.push(resolution);
                        resolutions[resolution] = [];
                        var url = info.formats[i].url;
                            
                        resolutions[resolution]['link'] = url;
                        resolutions[resolution]['container'] = container;
                    }
                    video.resolutions = resolutions;
                    storeVideosInfos(video);
                }
            }
        });
        } catch(err) {
            console.log('getVideoInfos err: '+ err);
        }
}


// store videos and return it in the right order...
function storeVideosInfos(video,infos,num) {
    video.items.push(infos); 
    videos_responses[num]=video;
    if (videos_responses.length == video.total) {
        video.cb(videos_responses);
        videos_responses = new Array();
    }
}

// functions
function in_array (needle, haystack, argStrict) {
  var key = '',
    strict = !! argStrict;

  if (strict) {
    for (key in haystack) {
      if (haystack[key] === needle) {
        return true;
      }
    }
  } else {
    for (key in haystack) {
      if (haystack[key] == needle) {
        return true;
      }
    }
  }

  return false;
}

function swapHeadAndPosition(array, position) {
    var head  = array[0];
    var other = array[position % array.length];
    array[0] = other;
    array[position] = head;
    return array;
}

module.exports = xv;
