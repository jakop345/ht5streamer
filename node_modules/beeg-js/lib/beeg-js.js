//load modules
var http = require('http');
var $ = require('cheerio');
// module vars
var current_search_page=1;
var current_start_index = 1;
var videos_responses = new Array();
var valid_vids = 0;
var bg = {};


// search videos
bg.searchVideos = function (query, page, duration, order, search_type, selected_category, cb){
    videos_responses = new Array();
    
    if (search_type === 'videos') {
        var url = '/search?q='+query+'&page='+page+'';
    } else if (search_type === 'category'){
        var url = '/tag/'+selected_category+'/'+page+'/'
    }
    var options = 
    {
        host: 'beeg.com',
        headers: {'user-agent': 'Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_2_1 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8G4 Safari/6533.18.5'},
        path: url
    }
    var req=http.request(options);
    req.on('response',function(response) { 
        var data = new Array(); 
        response.on("data", function(chunk) {
            data.push(chunk);
        });
        response.on('end',function(){
            var datas = $(data.join(''));
            var videos = {};
            if (search_type === 'videos'){
                var totalItems = $('.result-stats',datas).text().match(/About (.*?) /)[1];
                videos.totalItems = totalItems;
            }
            var list=$('#thumbs a',datas);
            videos.total = list.length;
            videos.cb = cb;
            videos.items = [];
            console.log(videos);
            for (var i=0; i<list.length; i++) {
                var infos = {};
                infos.link = list[i].attribs.href;
                infos.id = infos.link.split('/')[3];
                infos.thumb = "http://cdn.anythumb.com/236x177/"+infos.id+".jpg";
                infos.time = '...';
                infos.title = list[i].children[0].attribs.title;
                infos.views = '...';
                infos.author = 'unknown';
                infos.resolutions=[];
                infos.resolutions['480p'] = {};
                infos.resolutions['480p']['link'] = 'http://video.mystreamservice.com/480p/'+infos.id+'.mp4';
                infos.resolutions['480p']['container'] = 'mp4';
                storeVideosInfos(videos,infos,i);
            }
        });
    });
    req.on('error', function(e) {
        console.log("Got error: " + e.message);
    });
    req.end();
}


// store videos and return it in the right order...
function storeVideosInfos(video,infos,num) {
    video.items.push(infos); 
    videos_responses[num]=video;
    if (videos_responses.length == video.total) {
        video.cb(videos_responses);
        videos_responses = new Array();
    }
}

// functions
function in_array (needle, haystack, argStrict) {
  var key = '',
    strict = !! argStrict;

  if (strict) {
    for (key in haystack) {
      if (haystack[key] === needle) {
        return true;
      }
    }
  } else {
    for (key in haystack) {
      if (haystack[key] == needle) {
        return true;
      }
    }
  }

  return false;
}

function swapHeadAndPosition(array, position) {
    var head  = array[0];
    var other = array[position % array.length];
    array[0] = other;
    array[position] = head;
    return array;
}

module.exports = bg;
